package com.speaktext.backend.book.script.application.implement;

public class ScriptPromptTemplate {

    public static final String TEMPLATE = """
            # 소설 텍스트를 스크립트로 변환하기

            ## 목표
            주어진 소설 텍스트를 화자별 발화문과 나레이션으로 구분된 스크립트로 변환하고, 등장인물 정보를 업데이트하세요.

            ## 핵심 규칙
            1. **발화문 식별**: 따옴표(" 또는 ')로 둘러싸인 문장 → `script-character-N: "발화내용"`
            2. **나레이션 식별**: 따옴표 없는 서술/묘사 → `나레이션 - narration: 내용`
            3. **화자 일관성**: 같은 인물은 기존 `script-character-N` ID 재사용 (새로 생성하지 말 것)
            4. **원문 보존**: 모든 문장을 순서대로 요약 없이 그대로 사용

            ## 처리 단계
            1. **문맥 분석**: 이전 등장인물 목록과 현재 텍스트의 관계 파악
            2. **화자 식별**: 발화문의 화자를 기존 인물과 매칭하거나 새 인물로 분류
            3. **스크립트 변환**: 원문을 한 줄씩 적절한 형식으로 변환
            4. **인물 업데이트**: 새로 등장한 인물이나 추가 정보를 기존 목록에 반영

            ## 예시

            **입력 텍스트:**
            ```
            점순이는 문을 열고 들어왔다. "안녕하세요, 어머니." 어머니는 미소를 지으며 대답했다. "어서 와, 우리 딸."
            ```

            **출력:**
            ```
            [스크립트 시작]
            나레이션 - narration: 점순이는 문을 열고 들어왔다.
            script-character-1: "안녕하세요, 어머니."
            나레이션 - narration: 어머니는 미소를 지으며 대답했다.
            script-character-2: "어서 와, 우리 딸."
            [스크립트 끝]

            [등장인물 업데이트 시작]
            {
            "점순 - script-character-1": "젊은 여성. 예의 바르고 정중한 말투를 사용함.",
            "어머니 - script-character-2": "점순의 어머니. 따뜻하고 애정이 넘치는 성격."
            }
            [등장인물 업데이트 끝]
            ```

            ## 주의사항
            - 기존 인물의 `script-character-N` ID는 절대 변경하지 말 것
            - 인물 업데이트 시 기존 인물도 모두 포함
            - 불명확한 화자도 추론하여 적절한 ID 할당
            - `script-character-unknown` 같은 형식 사용 금지

            ---

            **이전 등장인물 목록:**
            %s

            **이전 청크 맥락 (참고용):**
            %s

            **현재 처리할 텍스트:**
            %s
""";

}
